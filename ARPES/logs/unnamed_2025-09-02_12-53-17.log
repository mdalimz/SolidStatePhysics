# IPython log file

import numpy as np
import matplotlib.pyplot as plt
from arpes.io import example_data
import arpes as arp

bi2se3_cut = example_data.cut # <- here, take `cut` above
                              # any of `map`, `photon_energy`,
                              # `nano_xps`, or
                              # `temperature_dependence` will work
bi2se3_cut
# just transpose to a more natural axis order with `.T` and plot
bi2se3_cut.spectrum.T.plot()
bi2se3_map = example_data.map # <- here, take `cut` above
bi2se3_map
# just transpose to a more natural axis order with `.T` and plot
bi2se3_map.spectrum.T.plot()
bi2se3_photon_energy= example_data.photon_energy
bi2se3_photon_energy
# just transpose to a more natural axis order with `.T` and plot
bi2se3_photon_energy.spectrum.T.plot()
bi2se3_xps= example_data.nano_xps
bi2se3_xps
# just transpose to a more natural axis order with `.T` and plot
bi2se3_xps.spectrum.T.plot()
bi2se3_temperature= example_data.temperature_dependence
bi2se3_temperature
# just transpose to a more natural axis order with `.T` and plot
bi2se3_temperature.spectrum.T.plot()
# just transpose to a more natural axis order with `.T` and plot
get_ipython().run_line_magic('matplotlib', 'inline')
bi2se3_cut.spectrum.T.plot()
plt.savefig("1")
import pprint

# Look at help information for the library function `pprint.pprint`
get_ipython().run_line_magic('pinfo', 'pprint.pprint')
from arpes.io import load_example_data

# Let's look at the full source code for `load_example_data`
get_ipython().run_line_magic('pinfo2', 'load_example_data')
load_example_data
print(load_example_data)
import example_data from arpes.io
from arpes.io import example_data
example_data
f=example_data
f=example_data
f
f=np.load_example_data
f
np.load_example_data
np.load.example_data
f=np.load.example_data
f=pd.load.example_data
import pandas as pd
f=pd.load.example_data
f=example_data
f.T.plot()
from arpes.io import example_data
f=example_data
f.T.plot()
f.S.plot()
f = example_data.cut
f.S.plot()
f.S
f.S
f.Spectrum
f.Spectrum()
f.spectrum
data1 = example_data.cut
data1.S.plot()
f.
f.spectrum
data1.S.plot()
f.spectrum
data1.spectrum
f.spectrum
